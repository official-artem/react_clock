{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toUTCString","intervalDate","showTime","date","window","console","info","slice","setState","this","setInterval","prevProps","name","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","clockName","timerIdNameInterval","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"qMAUaA,EAAb,4MACEC,MAAyB,CACvBC,MAAM,IAAIC,MAAOC,eAFrB,EAKEC,aAAe,EALjB,EAsBEC,SAAW,WACT,IAAMC,GAAO,IAAIJ,MAAOC,cAExBI,OAAOC,QAAQC,KAAKH,EAAKI,OAAO,IAAK,IACrC,EAAKC,SAAS,CAAEV,MAAM,IAAIC,MAAOC,iBA1BrC,uDAOE,WACES,KAAKR,aAAeG,OAAOM,YAAYD,KAAKP,SAAU,OAR1D,gCAWE,SAAmBS,GACbA,EAAUC,OAASH,KAAKI,MAAMD,MAEhCR,OAAOC,QAAQS,MAAf,uBAAqCH,EAAUC,KAA/C,eAA0DH,KAAKI,MAAMD,SAd3E,kCAkBE,WACER,OAAOW,cAAcN,KAAKR,gBAnB9B,oBA6BE,WACE,IAAQH,EAASW,KAAKZ,MAAdC,KACAc,EAASH,KAAKI,MAAdD,KAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGlB,EAAKS,OAAO,IAAK,YA1C5B,GAA2BU,a,MCN3B,SAASC,IACP,IAAMC,EAAQpB,KAAKqB,MAAMC,WAAWd,OAAO,GAE3C,MAAM,SAAN,OAAgBY,GAQX,IAAMG,EAAb,4MACEzB,MAAyB,CACvB0B,UAAU,EACVC,UAAW,WAHf,EAMEC,oBAAsB,EANxB,uDAQE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,SAAS,WACjC,EAAKnB,SAAS,CAAEe,UAAU,OAG5BG,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAEN,EAAKrB,SAAS,CAAEe,UAAU,OAG5Bd,KAAKgB,oBAAsBrB,OAAOM,aAAY,WAC5C,EAAKF,SAAS,CAAEgB,UAAWN,QAC1B,QArBP,kCAwBE,WACEd,OAAOW,cAAcN,KAAKgB,uBAzB9B,oBA4BE,WACE,IAAQD,EAAcf,KAAKZ,MAAnB2B,UAER,OACE,sBAAKR,UAAU,MAAf,UACE,6CAECP,KAAKZ,MAAM0B,UAAY,cAAC,EAAD,CAAOX,KAAMY,WAnC7C,GAAyBP,aCZzBa,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.f340359d.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  time: string;\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    time: new Date().toUTCString(),\n  };\n\n  intervalDate = 0;\n\n  componentDidMount() {\n    this.intervalDate = window.setInterval(this.showTime, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props): void {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      window.console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.intervalDate);\n  }\n\n  showTime = () => {\n    const date = new Date().toUTCString();\n\n    window.console.info(date.slice(-12, -4));\n    this.setState({ time: new Date().toUTCString() });\n  };\n\n  render() {\n    const { time } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {time.slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './components/Clock/Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerIdNameInterval = 0;\n\n  componentDidMount() {\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n\n      this.setState({ hasClock: false });\n    });\n\n    this.timerIdNameInterval = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerIdNameInterval);\n  }\n\n  render() {\n    const { clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}